name: deliver-windows

on:
  workflow_dispatch:
  push:

jobs:
  build:
    name: build-windows
    runs-on: ${{ matrix.config.os }} # будет запускаться по очереди на всех типах машин
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: "Windows Latest MinGW"
          os: windows-latest
          artifact: "windows_mingw.7z"
          build_type: "Release"
          cc: "gcc"
          cxx: "g++"
          archiver: "7z a"
          generators: "Ninja"
    steps:
    - uses: actions/checkout@v2
    - name: Print env
      run: |
        echo github.event.action: ${{ github.event.action }}
        echo github.event_name: ${{ github.event_name }}
   
    - name: Install dependencies on windows
      if: startsWith(matrix.config.os, 'windows')
      run: |
        choco install ninja cmake
        ninja --version
        cmake --version        

    - name: Configure
      shell: bash
      run: |
        mkdir build
        mkdir instdir
        cmake \
          -S . \
          -B . \
          -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
          -G "${{ matrix.config.generators }}" \
          -DCMAKE_INSTALL_PREFIX:PATH=instdir
    - name: Build
      shell: bash
      run: cmake --build . --config ${{ matrix.config.build_type }}

    - name: Install Strip
      shell: bash
      run: |
        cmake --install . --strip
        ls -R  

    - name: Pack
      shell: bash
      run: |
        ls -laR
        ${{ matrix.config.archiver }} ${{ matrix.config.artifact }} main.exe tests/calc_tests.exe
    - name: Upload
      shell: bash
      run: |
        curl -X POST https://content.dropboxapi.com/2/files/upload \
          --header "Authorization: Bearer ${{ DROPBOX_TOKEN }}" \
          --header "Dropbox-API-Arg: {\"path\": \"/builds/${{ matrix.config.artifact }}\"}" \
          --header "Content-Type: application/octet-stream" \
          --data-binary @${{ matrix.config.artifact }}

